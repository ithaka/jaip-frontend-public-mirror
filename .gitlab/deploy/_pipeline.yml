# Typically, a Capstan pipeline would include a promote stage (see
# https://wiki.ithaka.org/pages/viewpage.action?spaceKey=softdel&title=The+container+image+promotion+process).
# However, since we are pulling an image from a remote repo, promotion:
# * does not work (the image is not located where the promotion job would look)
# * is not necessary (the deploy script will look at the remote repo before
#   looking through our snapshot/rc/stable repos).

include:
  - ".gitlab/deploy/_setup.yml"
  - ".gitlab/mixins.yml"

stages:
  - prepare
  - check
  - promote
  - deploy
  - post-deploy
  - verify
  - status-notifications

# See Dockerfile. Note that the contents of the repository are _ignored by
# default_ and only built into the app when explicitly exempted in the
# .dockerignore. This is because the top-level repo contains lots of apparatus
# for test, CI, etc. that we don't actually need to deploy. In other words, if
# you have reached this comment because you're confused that your app builds
# fine locally with npm run build but isn't deploying properly, check the
# .dockerignore and consider whether you have recently added files or
# directories that you need to build.
build app image:
  stage: prepare
  extends: .build-image
  variables:
    KUBERNETES_MEMORY_LIMIT: 8Gi
    CI_DEBUG_TRACE: true
  before_script:
    # Write necessary env vars to .env file for the build
    - echo "ENVIRONMENT=$ENVIRONMENT" >> .env
    - echo "API_URL=$API_URL" >> .env
    # Copy the environment specific nginx config so it can be used in the build, then remove irrelevant config files
    - mv nginx/$NGINX_CONFIG nginx/nginx.conf && rm -rf nginx/nginx.conf.*

build app image pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "build app image"
    STATUS_STATE: "pending"

build app image success:
  extends: .notify-success
  needs:optional: 
    - build app image
    - build app image pending
  variables:
    STATUS_NAME: "build app image"
    STATUS_STATE: "success"

build app image failure:
  extends: .notify-failure
  needs:
    optional: 
      - build app image
      - build app image pending
  variables:
    STATUS_NAME: "build app image"
    STATUS_STATE: "failure"


# Default chart, configured via any `EXTRA_HELM_TEMPLATE_OPTIONS` referenced
# in `_setup.yml`. This chart deploys the app.
render capstan chart:
  stage: prepare
  extends: .render-charts
  needs: []

render capstan chart pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "render capstan chart"
    STATUS_STATE: "pending"

render capstan chart success:
  extends: .notify-success
  needs:
    optional: 
      - render capstan chart
      - render capstan chart pending
  variables:
    STATUS_NAME: "render capstan chart"
    STATUS_STATE: "success"

render capstan chart failure:
  extends: .notify-failure
  needs:
    optional: 
      - render capstan chart
      - render capstan chart pending
  variables:
    STATUS_NAME: "render capstan chart"
    STATUS_STATE: "failure"


scan vulnerabilities:
  stage: check
  dependencies:
    - build app image
  extends: .vulnerability-scanner
  variables:
    SEVERITY: critical high unknown
    FAIL_ON_SEVERITY: critical high unknown
  before_script:
    # replace / with - in branch name to be friendly w/ job
    - export CI_COMMIT_BRANCH="${CI_COMMIT_BRANCH//\//-}"

scan vulnerabilities pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "scan vulnerabilities"
    STATUS_STATE: "pending"

scan vulnerabilities success:
  extends: .notify-success
  needs:
    optional: 
      - scan vulnerabilities
      - scan vulnerabilities pending
  variables:
    STATUS_NAME: "scan vulnerabilities"
    STATUS_STATE: "success"

scan vulnerabilities failure:
  extends: .notify-failure
  needs:
    optional: 
      - scan vulnerabilities
      - scan vulnerabilities pending
  variables:
    STATUS_NAME: "scan vulnerabilities"
    STATUS_STATE: "failure"

# Run tsc type checker
type-check:
  stage: check
  extends:
    - .test
  script:
    - yarn type-check

type-check pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "type-check"
    STATUS_STATE: "pending"

type-check success:
  extends: .notify-success
  needs:
    optional: 
      - type-check
      - type-check pending
  variables:
    STATUS_NAME: "type-check"
    STATUS_STATE: "success"

type-check failure:
  extends: .notify-failure
  needs:
    optional: 
      - type-check
      - type-check pending
  variables:
    STATUS_NAME: "type-check"
    STATUS_STATE: "failure"


# Run eslint
lint:
  stage: check
  extends:
    - .test
  script:
    - yarn lint

lint pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "lint"
    STATUS_STATE: "pending"

lint success:
  extends: .notify-success
  needs:
    optional: 
      - lint
      - lint pending
  variables:
    STATUS_NAME: "lint"
    STATUS_STATE: "success"

lint failure:
  extends: .notify-failure
  needs:
    optional: 
      - lint
      - lint pending
  variables:
    STATUS_NAME: "lint"
    STATUS_STATE: "failure"


# Run e2e tests
e2e tests:
  stage: check
  extends:
    - .test
  script:
    - yarn test:e2e
    
e2e tests pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "e2e tests"
    STATUS_STATE: "pending"

e2e tests success:
  extends: .notify-success
  needs:
    optional: 
      - e2e tests
      - e2e tests pending
  variables:
    STATUS_NAME: "e2e tests"
    STATUS_STATE: "success"

e2e tests failure:
  extends: .notify-failure
  needs:
    optional: 
      - e2e tests
      - e2e tests pending
  variables:
    STATUS_NAME: "e2e tests"
    STATUS_STATE: "failure"

promote image:
  stage: promote
  extends: .promote-image

promote image pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "promote image"
    STATUS_STATE: "pending"

promote image success:
  extends: .notify-success
  needs:
    optional: 
      - promote image
      - promote image pending
  variables:
    STATUS_NAME: "promote image"
    STATUS_STATE: "success"

promote image failure:
  extends: .notify-failure
  needs:
    optional: 
      - promote image
      - promote image pending
  variables:
    STATUS_NAME: "promote image"
    STATUS_STATE: "failure"

wait for eureka:
  extends: .check-healthy-deployment
  stage: verify

wait for eureka pending:
  extends: .notify-pending
  variables:
    STATUS_NAME: "wait for eureka"
    STATUS_STATE: "pending"

wait for eureka success:
  extends: .notify-success
  needs:
    optional: 
      - wait for eureka
      - wait for eureka pending
  variables:
    STATUS_NAME: "wait for eureka"
    STATUS_STATE: "success"

wait for eureka failure:
  extends: .notify-failure
  needs:
    optional: 
      - wait for eureka
      - wait for eureka pending
  variables:
    STATUS_NAME: "wait for eureka"
    STATUS_STATE: "failure"
